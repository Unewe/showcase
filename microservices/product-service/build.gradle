plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.unewej'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

jar {
	enabled = false
}

def postgresqlVersion = "42.7.5"
def validationApiVersion = "3.1.0"
def testcontainersVersion = "1.20.4"
def mapstructVersion = "1.6.3"
def lombokVersion = "1.18.32"

dependencies {
	implementation project(":mutual:api")
	implementation project(":mutual:util")

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// Database
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation "org.postgresql:postgresql:${postgresqlVersion}"
	implementation "jakarta.validation:jakarta.validation-api:${validationApiVersion}"

	// Migrations
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'

	// Lombok and Mapstruct
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	compileOnly "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	// Tests
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation platform("org.testcontainers:testcontainers-bom:${testcontainersVersion}")
	testImplementation 'org.testcontainers:testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
}

tasks.named('test') {
	useJUnitPlatform()
}
